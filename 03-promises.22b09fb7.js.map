{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAGC,iBASH,IAPA,IAAgCC,EAAAF,EAAGG,cAAcC,SAAzCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAO,CACXlB,MAAOmB,OAAOJ,EAAMK,OACpBJ,KAAMG,OAAOH,EAAKI,OAClBH,OAAQE,OAAOF,EAAOG,QAGfC,EAAI,EAAGA,GAAKH,EAAKD,OAAQI,GAAK,EACrCvB,EAAcuB,EAAGH,EAAKlB,MAAQkB,EAAKF,MAAQK,EAAI,IAC5CC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAA4B,OAAOI,QAAQ,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGhEU,EAAGG,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(ev) {\n  ev.preventDefault();\n\n  const { delay, step, amount } = ev.currentTarget.elements;\n  const data = {\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value),\n  };\n\n  for (let i = 1; i <= data.amount; i += 1) {\n    createPromise(i, data.delay + data.step * (i - 1))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    ev.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay)\n// стільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй номер промісу(position),\n// що створюється, і затримку, враховуючи першу затримку(delay), введену користувачем, і крок(step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс,\n// який виконується або відхиляється через delay часу.Значенням промісу повинен бути об'єкт,\n// в якому будуть властивості position і delay зі значеннями однойменних параметрів.\n// Використовуй початковий код функції для вибору того, що потрібно зробити з промісом -\n// виконати або відхилити.\n\n//\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","ev","preventDefault","_elements","currentTarget","elements","delay1","step","amount","data","Number","value","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.22b09fb7.js.map"}